# This is a basic workflow to help you get started with Actions

name: OnSchedule

# Examples for different schedules (all times in UTC)
# every sunday at 20:00             '0 20 * * 0'
# every day at midnight             '0 0 * * *'
# every 2 hours during work hours   '30 5-17/2 * * 1-5'
# there may be some delays due to availability of github runners
on:
  schedule:
    - cron: '30 5-17/2 * * 1-5'
  workflow_dispatch:
    inputs:
      manual_trigger:
        description: 'Manually trigger the workflow'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  fetch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    outputs:
      changes: ${{ steps.auto-commit-action.outputs.changes_detected }}      

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install requirements
      working-directory: ./python
      run: pip install -r requirements.txt
    - name: Fetch Limesurvey
      working-directory: ./python
      env:
        LIMESURVEY_PASSWORD: ${{ secrets.LIMESURVEY_PASSWORD }}
        LIMESURVEY_URL: ${{ secrets.LIMESURVEY_URL }}
        LIMESURVEY_USERNAME: ${{ secrets.LIMESURVEY_USERNAME }}
      run: |
        python get_limesurvey_results.py
        mv -v limesurvey_data.js ../assets/js/visualization/limesurvey_data.js

    # Auto commits files to the repository
    - uses: stefanzweifel/git-auto-commit-action@v4
      id: auto-commit-action
      with:
        file_pattern: 'assets/*.js python/*.json'
        commit_message: "Github Action: Auto Limesurvey results"
        branch: ${{ github.ref }}
    # keep this scheduled action alive. A commit every 60 days is required.
    # This adds a dummy commit if there has been no activity for 50 days
    - uses: gautamkrishnar/keepalive-workflow@v1

  debug:
    runs-on: ubuntu-latest
    needs: fetch
    steps:
      - run: echo "Output -${{ needs.fetch.outputs.changes }}-"
    
  # Build job
  build:
    runs-on: ubuntu-latest
    needs: fetch
    if: needs.fetch.outputs.changes == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup Ruby
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      # minify javascript inplace, without commit
      - name: Auto Minify
        uses: nizarmah/auto-minify@v2.1
        with:
          directory: 'assets/js'
          overwrite: true
          js_engine: uglify-js
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
