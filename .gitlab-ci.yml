# This file is a template, and might need editing before it works on your project.
# Template project: https://gitlab.com/pages/jekyll
# Docs: https://docs.gitlab.com/ce/pages/
variables:
  JEKYLL_ENV: production
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# TODO: Maybe make it so only this task is run every day, and running pages only on new commits
# TODO: ping -c 1 websites.fraunhofer.de fails with "1 packets transmitted, 0 packets received, 100% packet loss", therefore this job will not succeed
#fetch_js:
#  image: python:3.8-alpine
#  stage: build
#  tags:
#    - asprunner
#  before_script:
#    - pip install -r python/requirements.txt
#  script:
#    # fetch limesurvey
#    - cd ./python
#    - python get_limesurvey_results.py --api_url "$LIMESURVEY_URL" --username "$LIMESURVEY_USERNAME" --password "$LIMESURVEY_PASSWORD"
#    - mv limesurvey_data.js assets/js/visualization/limesurvey_data.js
#  artifacts:
#    paths:
#      - assets/js/visualization/limesurvey_data.js
#  only:
#    - master

ping:
  image: praqma/network-multitool:latest
  tags:
    - asprunner
  script:
#    - ping -c 2 www.google.de
    - curl -sw 'We downloaded %{size_download} bytes\n' https://www.google.de -o /dev/null
#    - ping -c 2 www.iwu.fraunhofer.de
    - curl -sw 'We downloaded %{size_download} bytes\n' https://www.iwu.fraunhofer.de -o /dev/null
#    - ping -c 2 gitlab.cc-asp.fraunhofer.de
    - curl -w 'We downloaded %{size_download} bytes\n' https://gitlab.cc-asp.fraunhofer.de
#    - ping -c 2 websites.fraunhofer.de
    - curl -w 'We downloaded %{size_download} bytes\n' http://websites.fraunhofer.de/iwu-surveys/
    - curl -w 'We downloaded %{size_download} bytes\n' https://websites.fraunhofer.de/iwu-surveys/
    - curl -w 'We downloaded %{size_download} bytes\n' http://websites.fraunhofer.de/iwu-surveys/index.php/admin/authentication/sa/login
    - curl -w 'We downloaded %{size_download} bytes\n' https://websites.fraunhofer.de/iwu-surveys/index.php/admin/authentication/sa/login



#pages:
#  image: ruby:2.3
#  stage: deploy
#  tags:
#    - asprunner
#  before_script:
#    # minify js
#    - curl -X POST -s --data-urlencode 'input@assets/js/visualization/visualization.js' https://javascript-minifier.com/raw > assets/js/visualization/visualization.min.js
#    - curl -X POST -s --data-urlencode 'input@assets/js/visualization/compatibility.js' https://javascript-minifier.com/raw > assets/js/visualization/compatibility.min.js
#    - rm assets/js/visualization/visualization.js
#    - rm assets/js/visualization/compatibility.js
#    - bundle install
#  script:
#    - bundle exec jekyll build -d public
#  artifacts:
#    paths:
#      - public
#  only:
#    - master
